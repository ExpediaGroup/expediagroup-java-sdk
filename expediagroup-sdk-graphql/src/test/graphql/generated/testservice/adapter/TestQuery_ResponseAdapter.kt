//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.3.1'.
//
package testservice.adapter

import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.StringAdapter
import com.apollographql.apollo.api.json.JsonReader
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.missingField
import com.apollographql.apollo.api.obj
import kotlin.String
import kotlin.collections.List

public object TestQuery_ResponseAdapter {
  public object Data : Adapter<testservice.TestQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("testQuery")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): testservice.TestQuery.Data {
      var _testQuery: testservice.TestQuery.TestQuery? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _testQuery = TestQuery.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return testservice.TestQuery.Data(
        testQuery = _testQuery ?: missingField(reader, "testQuery")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: testservice.TestQuery.Data,
    ) {
      writer.name("testQuery")
      TestQuery.obj().toJson(writer, customScalarAdapters, value.testQuery)
    }
  }

  public object TestQuery : Adapter<testservice.TestQuery.TestQuery> {
    public val RESPONSE_NAMES: List<String> = listOf("id")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters): testservice.TestQuery.TestQuery {
      var _id: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return testservice.TestQuery.TestQuery(
        id = _id ?: missingField(reader, "id")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: testservice.TestQuery.TestQuery,
    ) {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)
    }
  }
}
