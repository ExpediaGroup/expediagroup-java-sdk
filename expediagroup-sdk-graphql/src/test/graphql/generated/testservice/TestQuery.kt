//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.3.1'.
//
package testservice

import com.apollographql.apollo.annotations.ApolloAdaptableWith
import com.apollographql.apollo.api.Adapter
import com.apollographql.apollo.api.CompiledField
import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.DefaultFakeResolver
import com.apollographql.apollo.api.FakeResolver
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.buildData
import com.apollographql.apollo.api.json.JsonWriter
import com.apollographql.apollo.api.obj
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import testservice.adapter.TestQuery_ResponseAdapter
import testservice.schema.__Schema
import testservice.selections.TestQuerySelections
import testservice.type.QueryBuilder
import testservice.type.__CustomScalarAdapters
import testservice.type.Query as CompiledQuery

public class TestQuery() : Query<TestQuery.Data> {
  override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  override fun hashCode(): Int = this::class.hashCode()

  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    withDefaultValues: Boolean,
  ) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> = TestQuery_ResponseAdapter.Data.obj()

  override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = CompiledQuery.type
  )
  .selections(selections = TestQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(TestQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val testQuery: TestQuery,
  ) : Query.Data

  public data class TestQuery(
    public val id: String,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "04f6482a6f0bcdf00ac7c7b62d5df9a82cfa06e094fd295105cf38e082e695be"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * ```
     * query TestQuery {
     *   testQuery {
     *     id
     *   }
     * }
     * ```
     */
    public val OPERATION_DOCUMENT: String
      get() = "query TestQuery { testQuery { id } }"

    public const val OPERATION_NAME: String = "TestQuery"

    public fun Data(resolver: FakeResolver = DefaultFakeResolver(__Schema.all), block: QueryBuilder.() -> Unit = {}): Data = buildData(
      CompiledQuery,
      block,
      TestQuery_ResponseAdapter.Data,
      TestQuerySelections.__root,
      "Query",
      resolver,
      __CustomScalarAdapters,
    )
  }
}
