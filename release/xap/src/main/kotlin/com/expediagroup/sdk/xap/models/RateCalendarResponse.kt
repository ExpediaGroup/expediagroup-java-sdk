/*
 * Copyright (C) 2022 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.expediagroup.sdk.xap.models

import com.expediagroup.sdk.xap.models.HotelRateCalendar
import com.expediagroup.sdk.xap.models.Warning
import com.fasterxml.jackson.annotation.JsonProperty
import org.hibernate.validator.constraints.Length
import javax.validation.Valid
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size

/**
 *
 * @param transactionId Unique identifier for the transaction.
 * @param warnings There were some errors or events during the transaction, but the API has still returned a response.  Container for all warnings.
 * @param rateCalendars Container for all hotel rate calendar data.
 */
data class RateCalendarResponse(
    // Unique identifier for the transaction.
    @JsonProperty("TransactionId")
    @field:Valid
    val transactionId: kotlin.String,
    // There were some errors or events during the transaction, but the API has still returned a response.  Container for all warnings.
    @JsonProperty("Warnings")
    @field:Valid
    val warnings: kotlin.collections.List<Warning>? = null,
    // Container for all hotel rate calendar data.
    @JsonProperty("RateCalendars")
    @field:Valid
    val rateCalendars: kotlin.collections.List<HotelRateCalendar>? = null
) {
    companion object {
        @JvmStatic
        fun builder() = Builder()
    }

    class Builder(
        private var transactionId: kotlin.String? = null,
        private var warnings: kotlin.collections.List<Warning>? = null,
        private var rateCalendars: kotlin.collections.List<HotelRateCalendar>? = null
    ) {
        fun transactionId(transactionId: kotlin.String) = apply { this.transactionId = transactionId }

        fun warnings(warnings: kotlin.collections.List<Warning>?) = apply { this.warnings = warnings }

        fun rateCalendars(rateCalendars: kotlin.collections.List<HotelRateCalendar>?) = apply { this.rateCalendars = rateCalendars }

        fun build(): RateCalendarResponse {
            // Check required params
            validateNullity()
            return RateCalendarResponse(
                transactionId = transactionId!!,
                warnings = warnings,
                rateCalendars = rateCalendars
            )
        }

        private fun validateNullity() {
            if (transactionId == null) {
                throw NullPointerException("Required parameter transactionId is missing")
            }
        }
    }
}
