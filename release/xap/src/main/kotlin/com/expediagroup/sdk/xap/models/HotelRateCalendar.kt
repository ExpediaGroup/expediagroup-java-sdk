/*
 * Copyright (C) 2022 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.expediagroup.sdk.xap.models

import com.expediagroup.sdk.xap.models.RateCalendar
import com.fasterxml.jackson.annotation.JsonProperty
import org.hibernate.validator.constraints.Length
import javax.validation.Valid
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size

/**
 * Container for all hotel rate calendar data.
 * @param ecomHotelId The unique, Expedia-specific hotel property identifier used to designate a single hotel.
 * @param rateCalendar Container for all rate calendar data.
 * @param hcomHotelId The unique, Hotels.com-specific hotel property identifier used to designate a single hotel.  This will be returned if searching via `hcomHotelId` in request or the request is coming from Hcom partner.
 */
data class HotelRateCalendar(
    // The unique, Expedia-specific hotel property identifier used to designate a single hotel.
    @JsonProperty("EcomHotelId")
    @field:Valid
    val ecomHotelId: kotlin.String,
    // Container for all rate calendar data.
    @JsonProperty("RateCalendar")
    @field:Valid
    val rateCalendar: kotlin.collections
        .List<
            RateCalendar
        >,
    // The unique, Hotels.com-specific hotel property identifier used to designate a single hotel.  This will be returned if searching via `hcomHotelId` in request or the request is coming from Hcom partner.
    @JsonProperty("HcomHotelId")
    @field:Valid
    val hcomHotelId: kotlin.String? = null
) {
    companion object {
        @JvmStatic
        fun builder() = Builder()
    }

    class Builder(
        private var ecomHotelId: kotlin.String? = null,
        private var rateCalendar: kotlin.collections.List<RateCalendar>? = null,
        private var hcomHotelId: kotlin.String? = null
    ) {
        fun ecomHotelId(ecomHotelId: kotlin.String) = apply { this.ecomHotelId = ecomHotelId }

        fun rateCalendar(rateCalendar: kotlin.collections.List<RateCalendar>) = apply { this.rateCalendar = rateCalendar }

        fun hcomHotelId(hcomHotelId: kotlin.String?) = apply { this.hcomHotelId = hcomHotelId }

        fun build(): HotelRateCalendar {
            // Check required params
            validateNullity()
            return HotelRateCalendar(
                ecomHotelId = ecomHotelId!!,
                rateCalendar = rateCalendar!!,
                hcomHotelId = hcomHotelId
            )
        }

        private fun validateNullity() {
            if (ecomHotelId == null) {
                throw NullPointerException("Required parameter ecomHotelId is missing")
            }
            if (rateCalendar == null) {
                throw NullPointerException("Required parameter rateCalendar is missing")
            }
        }
    }
}
