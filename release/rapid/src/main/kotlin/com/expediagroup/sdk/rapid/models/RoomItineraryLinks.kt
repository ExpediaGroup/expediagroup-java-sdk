/*
 * Copyright (C) 2022 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.expediagroup.sdk.rapid.models

import com.expediagroup.sdk.rapid.models.Link
import com.expediagroup.sdk.rapid.operations.ChangeRoomDetailsOperationLink
import com.expediagroup.sdk.rapid.operations.DeleteRoomOperationLink
import com.expediagroup.sdk.rapid.operations.GetAdditionalAvailabilityOperationLink
import com.fasterxml.jackson.annotation.JsonProperty
import org.hibernate.validator.constraints.Length
import javax.validation.Valid
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size

/**
 * A map of links - * `cancel` - Cancel the booking for this room * `change` - A PUT call to modify the details of the booking for this room (soft change) * `shop_for_change` - Shop for rates to evaluate for possible rebooking. This shop call will show the estimated financial impact of the change.<br>   Current parameters supported in shop for change: `checkin`, `checkout`, `occupancy` See: [additional rates](#get-/properties/-property_id-/availability)
 * @param cancel
 * @param change
 * @param shopForChange
 */
data class RoomItineraryLinks(
    @JsonProperty("cancel")
    @field:Valid
    val cancel: DeleteRoomOperationLink? = null,
    @JsonProperty("change")
    @field:Valid
    val change: ChangeRoomDetailsOperationLink? = null,
    @JsonProperty("shop_for_change")
    @field:Valid
    val shopForChange: GetAdditionalAvailabilityOperationLink? = null
) {
    companion object {
        @JvmStatic
        fun builder() = Builder()
    }

    class Builder(
        private var cancel: DeleteRoomOperationLink? = null,
        private var change: ChangeRoomDetailsOperationLink? = null,
        private var shopForChange: GetAdditionalAvailabilityOperationLink? = null
    ) {
        fun cancel(cancel: DeleteRoomOperationLink?) = apply { this.cancel = cancel }

        fun change(change: ChangeRoomDetailsOperationLink?) = apply { this.change = change }

        fun shopForChange(shopForChange: GetAdditionalAvailabilityOperationLink?) = apply { this.shopForChange = shopForChange }

        fun build(): RoomItineraryLinks {
            return RoomItineraryLinks(
                cancel = cancel,
                change = change,
                shopForChange = shopForChange
            )
        }
    }
}
