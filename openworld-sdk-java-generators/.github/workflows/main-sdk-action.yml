name: Build & Release SDK
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'generated sdk version'
        required: false
        default: ''
      name:
        description: 'generated sdk name'
        required: true
      fileAsBase64:
        description: 'generated sdk file as base64 encoded'
        required: true
jobs:
  prepare_sdk_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - id: get_version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
              sudo apt-get update
              sudo apt-get -y install libxml2-utils
              currentVersion=$(curl --silent https://repo1.maven.org/maven2/com/expediagroup/openworld/sdk/openworld-java-sdk-${{ github.event.inputs.name }}/maven-metadata.xml | xmllint --xpath "/metadata/versioning/latest/text()" -) || currentVersion=0.0.1-alpha
              lastCharacter=${currentVersion: -1}
              re='^[0-9]+$'
              if ! [[ $lastCharacter =~ $re ]]; then
              currentVersion="${currentVersion}.1"
              else
              currentVersion="${currentVersion%?}$((lastCharacter+1))"
              fi
              echo "::set-output name=version::${currentVersion}"
          else
              echo "::set-output name=version::${{ github.event.inputs.version }}"
          fi

  generate_sdk:
    uses: ./.github/workflows/generate-sdk-action.yml
    needs: [ prepare_sdk_version ]
    with:
      version: ${{ needs.prepare_sdk_version.outputs.version }}
      name: ${{ github.event.inputs.name }}
      fileAsBase64: ${{ github.event.inputs.fileAsBase64 }}

  publish:
    runs-on: ubuntu-latest
    needs: [ generate_sdk ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: sdk
          path: sdk
      - name: Copy
        run: |
          git config --global user.email "oss@expediagroup.com"
          git config --global user.name "Expedia Group Open Source"
          git checkout -b "${{github.event.inputs.name}}-${{github.event.inputs.version}}"
          mkdir -p ./generated/"${{github.event.inputs.name}}/${{github.event.inputs.version}}"
          cp -a ./sdk ./generated/"${{github.event.inputs.name}}/${{github.event.inputs.version}}"
          git add --all
          git commit -m "chore: Publish ${{github.event.inputs.name}}-${{github.event.inputs.version}} generated SDK"
          git push --set-upstream origin "${{github.event.inputs.name}}-${{github.event.inputs.version}}"
          gh pr create -B main -H "${{github.event.inputs.name}}-${{github.event.inputs.version}}" --title 'Publish ${{github.event.inputs.name}}-${{github.event.inputs.version}} Generated SDK' --body 'Publish ${{github.event.inputs.name}}-${{github.event.inputs.version}} generated SDK'
        env:
          GH_TOKEN: ${{ github.token }}

  deploy_sdk:
    needs: [ generate_sdk ]
    uses: ./.github/workflows/github-release-actions.yml
    secrets: inherit
