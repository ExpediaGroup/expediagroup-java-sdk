/*
 * Copyright (C) 2022 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.expediagroup.openworld.sdk.fraudprevention.models

import com.expediagroup.openworld.sdk.fraudprevention.models.Amount

import com.fasterxml.jackson.annotation.JsonProperty
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.Length;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonSubTypes
import com.fasterxml.jackson.annotation.JsonSubTypes.Type
import com.fasterxml.jackson.annotation.JsonTypeInfo

/**
 * 
 * @param price 
 * @param type Type of product advertised on the website.
 * @param inventoryType Type of inventory.
 * @param inventorySource Identifies the business model through which the supply is being sold. Merchant/Agency.
 * @param travelersReferences List of travelerGuids who are part of the traveling party on the order for the product.
 */
@JsonIgnoreProperties(ignoreUnknown = true, value = ["type"])
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes(
    Type(value = Air::class, name = "Air"),
    Type(value = Car::class, name = "Car"),
    Type(value = Cruise::class, name = "Cruise"),
    Type(value = Hotel::class, name = "Hotel"),
    Type(value = Insurance::class, name = "Insurance")
)
interface TravelProduct {

    
val price: Amount
        /* Type of product advertised on the website. */

val type: kotlin.String
        /* Type of inventory. */

val inventoryType: kotlin.String
        /* Identifies the business model through which the supply is being sold. Merchant/Agency. */

val inventorySource: TravelProduct.InventorySource
        /* List of travelerGuids who are part of the traveling party on the order for the product. */

val travelersReferences: kotlin.collections.List<kotlin.String>

    /**
     * Identifies the business model through which the supply is being sold. Merchant/Agency.
     * Values: MERCHANT,AGENCY
     */
    enum class InventorySource(val value: kotlin.String) {
        @JsonProperty("MERCHANT")
        MERCHANT("MERCHANT"),
        
        @JsonProperty("AGENCY")
        AGENCY("AGENCY");
    }
}

