/*
 * Copyright (C) 2022 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.expediagroup.openworld.sdk.rapid.models

import com.expediagroup.openworld.sdk.rapid.models.FeesPricingInformation1
import com.expediagroup.openworld.sdk.rapid.models.NightCharge1
import com.expediagroup.openworld.sdk.rapid.models.Stay1
import com.expediagroup.openworld.sdk.rapid.models.Totals1

import com.fasterxml.jackson.annotation.JsonProperty
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.Length;

/**
 * The pricing information object.
 * @param nightly Array of arrays of amount objects. Each sub-array of amount objects represents a single night's charges.
 * @param stay Array of amount objects. Details any charges that apply to the entire stay (not divided per-night). Any per-room adjustments are applied to the `base_rate` amount within this object.
 * @param totals 
 * @param fees 
 */
data class PricingInformation1(
    /* Array of arrays of amount objects. Each sub-array of amount objects represents a single night's charges. */
@JsonProperty("nightly")

    
    
    
    
    @field:Valid
    val nightly: kotlin.collections.List<kotlin.collections.List<NightCharge1>>? = null,

    /* Array of amount objects. Details any charges that apply to the entire stay (not divided per-night). Any per-room adjustments are applied to the `base_rate` amount within this object. */
@JsonProperty("stay")

    
    
    
    
    @field:Valid
    val stay: kotlin.collections.List<Stay1>? = null,

    @JsonProperty("totals")

    
    
    
    
    @field:Valid
    val totals: Totals1? = null,

    @JsonProperty("fees")

    
    
    
    
    @field:Valid
    val fees: FeesPricingInformation1? = null
) {

    companion object {
        @JvmStatic
        fun builder() = Builder()
    }

    class Builder(
        private var nightly: kotlin.collections.List<kotlin.collections.List<NightCharge1>>? = null,
        private var stay: kotlin.collections.List<Stay1>? = null,
        private var totals: Totals1? = null,
        private var fees: FeesPricingInformation1? = null
    ) {
        fun nightly(nightly: kotlin.collections.List<kotlin.collections.List<NightCharge1>>) = apply { this.nightly = nightly }
        fun stay(stay: kotlin.collections.List<Stay1>) = apply { this.stay = stay }
        fun totals(totals: Totals1) = apply { this.totals = totals }
        fun fees(fees: FeesPricingInformation1) = apply { this.fees = fees }

        fun build(): PricingInformation1 {
            return PricingInformation1(
                nightly = nightly,
                stay = stay,
                totals = totals,
                fees = fees
            )
        }

    }
}

