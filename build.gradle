import org.jetbrains.kotlin.gradle.plugin.KotlinBasePluginWrapper
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import java.time.Duration

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.2.10' apply false
    id "org.jlleitschuh.gradle.ktlint" version "12.3.0" apply false
    id 'org.jetbrains.kotlinx.kover' version "0.9.2" apply false
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

group = project.property("GROUP_ID")

apply from: "$rootDir/gradle-tasks/publish-snapshot.gradle"

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }

    transitionCheckOptions {
        maxRetries = 60
        delayBetween = Duration.ofMillis(5000)
    }
}

subprojects {
    /* Shared plugins across all modules */
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'org.jetbrains.kotlinx.kover'

    /* Shared repositories across all modules */
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    plugins.withId("org.jetbrains.kotlin.jvm") {
        kotlin {
            jvmToolchain(8)
        }
    }

    plugins.withType(KotlinBasePluginWrapper).configureEach {
        tasks.withType(KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }

    java {
        withSourcesJar()
        withJavadocJar()
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }

    ktlint {
        debug = true
        version = "1.5.0"
        verbose = true

        additionalEditorconfig = [
            "max_line_length"     : "120",
            "indent_style"        : "space",
            "indent_size"         : "4",
            "insert_final_newline": "true",
            "end_of_line"         : "lf",
        ]

        filter {
            exclude("**/testservice/**")
        }
    }
}
