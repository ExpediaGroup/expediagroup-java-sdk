openapi: '3.1.0'
info:
  title: 'OpenAPI definition'
  version: 'v0'
servers:
  - url: 'http://localhost:8080'
    description: 'Generated server url'
tags:
  - name: 'Bookings'
    description: 'Hotel booking management API'
  - name: 'Hotels'
    description: 'Hotel search and information API'
paths:
  /api/v1/bookings/{confirmationNumber}:
    get:
      tags:
        - 'get-booking-by-confirmation-number'
      summary: 'Get booking details'
      description: 'Retrieve booking information by confirmation number'
      operationId: 'get-booking-by-confirmation-number'
      parameters:
        - name: 'confirmationNumber'
          in: 'path'
          description: 'Booking confirmation number'
          required: true
          schema:
            type: 'string'
          example: 'BK12345678'
      responses:
        "200":
          description: 'Successfully retrieved booking'
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Booking'
        "400":
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Booking not found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - 'update-booking'
      summary: 'Update booking'
      description: 'Update an existing booking'
      operationId: 'update-booking'
      parameters:
        - name: 'confirmationNumber'
          in: 'path'
          description: 'Booking confirmation number'
          required: true
          schema:
            type: 'string'
          example: 'BK12345678'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      responses:
        "200":
          description: 'Booking updated successfully'
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Booking'
        "202":
          description: 'Accepted'
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Booking'
        "400":
          description: 'Booking cannot be updated'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Booking not found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - 'delete-booking'
      summary: 'Delete booking'
      description: 'Delete an existing booking'
      operationId: 'delete-booking'
      parameters:
        - name: 'confirmationNumber'
          in: 'path'
          description: 'Booking confirmation number'
          required: true
          schema:
            type: 'string'
          example: 'BK12345678'
      responses:
        "200":
          description: 'Booking deleted successfully'
          content:
            "*/*":
              schema:
                type: 'boolean'
        "400":
          description: 'Booking cannot be deleted'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Booking not found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/v1/bookings:
    get:
      tags:
        - 'get-all-bookings'
      summary: 'Get all bookings'
      description: 'Retrieve all bookings'
      operationId: 'get-all-bookings'
      responses:
        "200":
          description: 'Successfully retrieved bookings'
          content:
            "*/*":
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Booking'
        "400":
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Not Found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    post:
      tags:
        - 'create-booking'
      summary: 'Create a hotel booking'
      description: 'Book a hotel room'
      operationId: 'create-booking'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
        required: true
      responses:
        "201":
          description: 'Booking created successfully'
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Booking'
        "400":
          description: 'Invalid booking request'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Hotel not found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/v1/hotels:
    get:
      tags:
        - 'search-hotel'
      summary: 'Search hotels'
      description: 'Search for hotels based on criteria'
      operationId: 'search-hotel'
      parameters:
        - name: 'city'
          in: 'query'
          required: false
          schema:
            type: 'string'
        - name: 'maxPrice'
          in: 'query'
          required: false
          schema:
            type: 'number'
      responses:
        "200":
          description: 'Successfully retrieved hotels'
          content:
            "*/*":
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Hotel'
        "400":
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Not Found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /api/v1/hotels/{id}:
    get:
      tags:
        - 'get-hotel-by-id'
      summary: 'Get hotel by ID'
      description: 'Retrieve detailed information about a specific hotel'
      operationId: 'get-hotel-by-id'
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
      responses:
        "200":
          description: 'Successfully retrieved hotel'
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Hotel'
        "400":
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        "404":
          description: 'Hotel not found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
components:
  schemas:
    ProblemDetail:
      type: 'object'
      properties:
        type:
          type: 'string'
          format: 'uri'
        title:
          type: 'string'
        status:
          type: 'integer'
          format: 'int32'
        detail:
          type: 'string'
        instance:
          type: 'string'
          format: 'uri'
        properties:
          type: 'object'
          additionalProperties: {}
    Booking:
      type: 'object'
      description: 'Hotel booking confirmation'
      properties:
        confirmationNumber:
          type: 'string'
          description: 'Unique booking confirmation number'
          example: 'BK123456789'
        status:
          type: 'string'
          description: 'Booking status'
          enum:
            - 'PENDING'
            - 'CONFIRMED'
            - 'CANCELLED'
            - 'COMPLETED'
          example: 'CONFIRMED'
        hotel:
          $ref: '#/components/schemas/Hotel'
          description: 'Booked hotel information'
        checkInDate:
          type: 'string'
          format: 'date'
          description: 'Check-in date'
          example: '2025-08-15T00:00:00.000Z'
        checkOutDate:
          type: 'string'
          format: 'date'
          description: 'Check-out date'
          example: '2025-08-18T00:00:00.000Z'
        guests:
          type: 'integer'
          format: 'int32'
          description: 'Number of guests'
          example: 2
        guestInfo:
          $ref: '#/components/schemas/GuestInfo'
          description: 'Guest information'
        totalPrice:
          type: 'number'
          description: 'Total price'
          example: 599.97
        createdAt:
          type: 'string'
          format: 'date-time'
          description: 'Booking creation timestamp'
      required:
        - 'checkInDate'
        - 'checkOutDate'
        - 'confirmationNumber'
        - 'createdAt'
        - 'guestInfo'
        - 'guests'
        - 'hotel'
        - 'status'
        - 'totalPrice'
    GuestInfo:
      type: 'object'
      description: 'Guest information'
      properties:
        firstName:
          type: 'string'
          description: 'First name'
          example: 'John'
          minLength: 1
        lastName:
          type: 'string'
          description: 'Last name'
          example: 'Doe'
          minLength: 1
        email:
          type: 'string'
          description: 'Email address'
          example: 'john.doe@example.com'
          minLength: 1
        phoneNumber:
          type: 'string'
          description: 'Phone number'
          example: '+1-555-123-4567'
      required:
        - 'email'
        - 'firstName'
        - 'lastName'
    Hotel:
      type: 'object'
      description: 'Hotel information'
      properties:
        id:
          type: 'integer'
          format: 'int64'
          description: 'Unique hotel identifier'
          example: 12345
        name:
          type: 'string'
          description: 'Hotel name'
          example: 'Grand Plaza Hotel'
          minLength: 1
        description:
          type: 'string'
          description: 'Hotel description'
          example: 'A luxurious hotel in the heart of the city'
        location:
          $ref: '#/components/schemas/Location'
          description: 'Hotel location'
        pricePerNight:
          type: 'number'
          description: 'Price per night in USD'
          example: 199.99
        amenities:
          type: 'array'
          description: 'Hotel amenities'
          items:
            type: 'string'
        starRating:
          type: 'integer'
          format: 'int32'
          description: 'Star rating'
          example: 4
        checkInTime:
          type: 'string'
          description: 'Check-in time'
          example: '15:00'
        checkOutTime:
          type: 'string'
          description: 'Check-out time'
          example: '11:00'
      required:
        - 'amenities'
        - 'id'
        - 'location'
        - 'name'
        - 'pricePerNight'
    Location:
      type: 'object'
      description: 'Hotel location information'
      properties:
        address:
          type: 'string'
          description: 'Street address'
          example: 123
          minLength: 1
        city:
          type: 'string'
          description: 'City'
          example: 'New York'
          minLength: 1
        state:
          type: 'string'
          description: 'State or province'
          example: 'NY'
          minLength: 1
        country:
          type: 'string'
          description: 'Country'
          example: 'USA'
          minLength: 1
        postalCode:
          type: 'string'
          description: 'Postal code'
          example: 10001
        latitude:
          type: 'number'
          format: 'double'
          description: 'Latitude'
          example: 40.7589
        longitude:
          type: 'number'
          format: 'double'
          description: 'Longitude'
          example: -73.9851
      required:
        - 'address'
        - 'city'
        - 'country'
        - 'state'
    BookingRequest:
      type: 'object'
      description: 'Hotel booking request'
      properties:
        hotelId:
          type: 'integer'
          format: 'int64'
          description: 'Hotel ID to book'
          example: 12345
        checkInDate:
          type: 'string'
          format: 'date'
          description: 'Check-in date'
          example: '2025-08-15T00:00:00.000Z'
        checkOutDate:
          type: 'string'
          format: 'date'
          description: 'Check-out date'
          example: '2025-08-18T00:00:00.000Z'
        guests:
          type: 'integer'
          format: 'int32'
          description: 'Number of guests'
          example: 2
        guestInfo:
          $ref: '#/components/schemas/GuestInfo'
          description: 'Guest information'
      required:
        - 'checkInDate'
        - 'checkOutDate'
        - 'guestInfo'
        - 'guests'
        - 'hotelId'
