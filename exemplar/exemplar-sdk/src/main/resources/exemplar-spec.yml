openapi: 3.0.0
info:
  title: Simple To-Do API
  version: 1.0.0
  description: A demonstration API for managing a to-do list.
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /tasks:
    get:
      summary: List all tasks
      responses:
        '200':
          description: A JSON array of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{taskId}:
    parameters:
      - name: taskId
        in: path
        required: true
        description: ID of the task
        schema:
          type: integer
          format: int64
    get:
      summary: Get a task by ID
      responses:
        '200':
          description: The requested task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a task
      responses:
        '204':
          description: Task deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        completed:
          type: boolean
      required:
        - id
        - title
        - completed
    NewTask:
      type: object
      properties:
        title:
          type: string
      required:
        - title
    UpdateTask:
      type: object
      properties:
        title:
          type: string
        completed:
          type: boolean
      required:
        - title
        - completed
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Task not found
