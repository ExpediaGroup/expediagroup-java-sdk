package com.expediagroup.sdk.{{namespace}}.operations

import com.expediagroup.sdk.core.model.Operation

{{#operations}}{{#operation}}
    {{^hasBodyParam}}
        import com.expediagroup.sdk.core.model.Nothing
    {{/hasBodyParam}}

    {{#bodyParam}}
        import com.expediagroup.sdk.{{namespace}}.models.{{dataType}}
    {{/bodyParam}}

    {{#isRapid}}{{#isLinkable}}
        import com.expediagroup.sdk.{{namespace}}.models.Link
    {{/isLinkable}}{{/isRapid}}

    {{#hasPathParams}}
        import org.apache.commons.text.StringSubstitutor
    {{/hasPathParams}}
{{/operation}}{{/operations}}


{{#operations}}
    {{#operation}}
        /**
        * {{{summary}}}
        {{#hasBodyParam}}
            * @property requestBody [{{#bodyParam}}{{dataType}}{{/bodyParam}}]
        {{/hasBodyParam}}
        {{#hasNonBodyParams}}
            * @property params [{{classname}}Params]
        {{/hasNonBodyParams}}
        */
        class {{classname}} {{#isRapid}}{{#isLinkable}}private constructor{{/isLinkable}}{{/isRapid}}(
            {{#hasNonBodyParams}}
                params: {{classname}}Params{{#isRapid}}{{#isLinkable}}?{{/isLinkable}}{{/isRapid}},
            {{/hasNonBodyParams}}
            {{#hasBodyParam}}
                requestBody: {{#bodyParam}}{{dataType}}{{/bodyParam}}{{^required}}?{{/required}},
            {{/hasBodyParam}}
            {{#isRapid}}{{#isLinkable}}link: Link?{{/isLinkable}}{{/isRapid}}
        ) : Operation<
            {{#hasBodyParam}}{{#bodyParam}}{{dataType}}{{/bodyParam}}{{/hasBodyParam}}
            {{^hasBodyParam}}Nothing{{/hasBodyParam}}
        >(
            {{#hasPathParams}}
                {{#isRapid}}
                    {{#isLinkable}}url(params, link, "{{{path}}}"),{{/isLinkable}}
                    {{^isLinkable}}url(params),{{/isLinkable}}
                {{/isRapid}}
                {{^isRapid}}
                    url(params),
                {{/isRapid}}
            {{/hasPathParams}}
            {{^hasPathParams}}
                {{#isRapid}}
                    {{#isLinkable}}url(null, link, "{{{path}}}"),{{/isLinkable}}
                    {{^isLinkable}}"{{{path}}}",{{/isLinkable}}
                {{/isRapid}}
                {{^isRapid}}
                    "{{{path}}}",
                {{/isRapid}}
            {{/hasPathParams}}
            "{{httpMethod}}",
            "{{operationId}}",
            {{#hasBodyParam}}requestBody{{/hasBodyParam}}{{^hasBodyParam}}null{{/hasBodyParam}},
            {{#hasNonBodyParams}}
                params
            {{/hasNonBodyParams}}
            {{^hasPathParams}}{{^hasHeaderParams}}{{^hasQueryParams}}
                null
            {{/hasQueryParams}}{{/hasHeaderParams}}{{/hasPathParams}}
        )

        {{#isRapid}}
            {
                {{#hasBodyParam}}{{#hasNonBodyParams}}
                    @Deprecated("Switch order of parameters", ReplaceWith("Operation(params: {{classname}}Params, requestBody: {{#bodyParam}}{{dataType}}{{/bodyParam}}{{^required}}?{{/required}})"))
                    constructor(
                        requestBody: {{#bodyParam}}{{dataType}}{{/bodyParam}}{{^required}}?{{/required}},
                        params: {{classname}}Params
                    ): this(params, requestBody)
                {{/hasNonBodyParams}}{{/hasBodyParam}}
                {{#isLinkable}}
                    constructor(
                        {{#hasNonBodyParams}}
                            params: {{classname}}Params,
                        {{/hasNonBodyParams}}
                        {{#hasBodyParam}}
                            requestBody: {{#bodyParam}}{{dataType}}{{/bodyParam}}{{^required}}?{{/required}}
                        {{/hasBodyParam}}
                    ): this(
                        {{#hasNonBodyParams}}params,{{/hasNonBodyParams}}
                        {{#hasBodyParam}}requestBody,{{/hasBodyParam}}
                        null
                    )

                    constructor(
                        link: Link,
                        context: {{classname}}Context?,
                        {{#hasBodyParam}}
                            requestBody: {{#bodyParam}}{{dataType}}{{/bodyParam}}{{^required}}?{{/required}}
                        {{/hasBodyParam}}
                    ): this(
                        {{#hasNonBodyParams}}{{classname}}Params(context),{{/hasNonBodyParams}}
                        {{#hasBodyParam}}requestBody,{{/hasBodyParam}}
                        link
                    )

                    companion object : LinkableOperation {
                        override fun pathPattern(): String {
                            {{#hasPathParams}}
                                val paramsMap = buildMap {
                                    {{#pathParams}}
                                        put("{{baseName}}", "[a-z0-9]+")
                                    {{/pathParams}}
                                }
                                val substitutor = StringSubstitutor(paramsMap, "{", "}")
                                return substitutor.replace("{{{path}}}")
                            {{/hasPathParams}}
                            {{^hasPathParams}}
                                return "{{{path}}}"
                            {{/hasPathParams}}
                        }
                    }
                {{/isLinkable}}
                {{^isLinkable}}
                    {{#hasPathParams}}
                        companion object {
                            fun url(params: {{classname}}Params) : String {
                                val url = "{{{path}}}"
                                val substitutor = StringSubstitutor(params.getPathParams(), "{", "}")
                                return substitutor.replace(url)
                            }
                        }
                    {{/hasPathParams}}
                {{/isLinkable}}
            }
        {{/isRapid}}
        {{^isRapid}}
            {{#hasPathParams}}
                companion object {
                    fun url(params: {{classname}}Params) : String {
                        val url = "{{{path}}}"
                        val substitutor = StringSubstitutor(params.getPathParams(), "{", "}")
                        return substitutor.replace(url)
                    }
                }
            {{/hasPathParams}}
        {{/isRapid}}
    {{/operation}}
{{/operations}}