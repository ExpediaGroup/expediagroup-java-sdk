package {{packageName}}.models.exception

import com.expediagroup.openworld.sdk.core.model.exception.client.OpenWorldClientResponseException
import com.expediagroup.openworld.sdk.core.model.exception.service.OpenWorldServiceException
import {{packageName}}.models.*
import io.ktor.client.call.*
import io.ktor.client.statement.*
import kotlinx.coroutines.runBlocking

internal inline fun <reified T> fetchErrorObject(httpResponse: HttpResponse): T = runBlocking {
    runCatching {
        httpResponse.body<T>()
    }.getOrElse {
        throw OpenWorldServiceException(httpResponse.bodyAsText())
    }
}

{{#apiInfo}}
    {{#apis}}
        {{#defineApiExceptions}}{{/defineApiExceptions}}
    {{/apis}}
{{/apiInfo}}
