<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.expediagroup.openworld.sdk</groupId>
    <artifactId>openworld-java-sdk-core</artifactId>
    <name>EG Open World SDK :: Core</name>
    <description>Core Modules of EG Travel SDK</description>
    <version>${revision}</version>
    <inceptionYear>2022</inceptionYear>
    <url>https://github.com/ExpediaGroup/openworld-sdk-java-core</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Expedia Group Committers</name>
            <organization>Expedia Group</organization>
            <organizationUrl>https://expediagroup.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:ExpediaGroup/openworld-sdk-java-core.git</connection>
        <developerConnection>scm:git:git@github.com:ExpediaGroup/openworld-sdk-java-core.git</developerConnection>
        <url>https://github.com/ExpediaGroup/openworld-sdk-java-core</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>oss-sonatype</id>
            <name>Sonatype Nexus Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oss-sonatype</id>
            <name>Sonatype Nexus Release Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>


    <properties>
        <revision>2.3.0</revision>
        <!-- Target JDK8 Minimum -->
        <java.release>1.8</java.release>
        <maven.compiler.release>8</maven.compiler.release>

        <!-- Require UTF-8 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Require Sane Build Environment -->
        <minimum.maven.version>3.8.0</minimum.maven.version>
        <minimum.jdk.version>11.0.0</minimum.jdk.version>

        <!-- Require Code Coverage -->
        <minimum.code.coverage>0.90</minimum.code.coverage>

        <!-- Plugin Versions -->
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.1.0</maven-surefire-plugin.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <ktlint-plugin.version>1.16.0</ktlint-plugin.version>
        <jacoco-plugin.version>0.8.10</jacoco-plugin.version>
        <dokka-plugin.version>1.8.10</dokka-plugin.version>
        <maven.gpg.plugin.version>3.1.0</maven.gpg.plugin.version>
        <maven.release.plugin.version>3.4.1</maven.release.plugin.version>
        <maven.nexus-staging.plugin.version>1.6.13</maven.nexus-staging.plugin.version>
        <maven.licence.plugin.version>4.2</maven.licence.plugin.version>
        <maven.antrun.plugin.version>3.1.0</maven.antrun.plugin.version>

        <!-- Kotlin Compatible Versions -->
        <kotlin.version>1.8.21</kotlin.version>
        <kotlinx.coroutines.version>1.6.4</kotlinx.coroutines.version>
        <kotlinx.serialization.version>1.5.0</kotlinx.serialization.version>
        <ktor.version>2.3.0</ktor.version>
        <kotlin-logging.version>3.0.5</kotlin-logging.version>
        <kotlin-atomic.version>0.20.2</kotlin-atomic.version>
        <ktlint.version>0.47.1</ktlint.version>
        <detekt.version>1.22.0</detekt.version>

        <!-- Shared Library Versions -->
        <airline.version>2.9.0</airline.version>
        <assertj.version>3.24.2</assertj.version>
        <junit5.version>5.9.3</junit5.version>
        <mockk.version>1.13.5</mockk.version>
        <mockito.version>5.3.1</mockito.version>
        <slf4j.version>2.0.7</slf4j.version>
        <log4j.version>2.20.0</log4j.version>

        <swagger.core.version>2.2.10</swagger.core.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-bom</artifactId>
                <version>${kotlinx.coroutines.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-bom</artifactId>
                <version>${ktor.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-serialization-json-jvm</artifactId>
                <version>${kotlinx.serialization.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-serialization-core-jvm</artifactId>
                <version>${kotlinx.serialization.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-annotations-jvm</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.microutils</groupId>
                <artifactId>kotlin-logging-jvm</artifactId>
                <version>${kotlin-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>atomicfu-jvm</artifactId>
                <version>${kotlin-atomic.version}</version>
            </dependency>

            <!-- Libraries & Frameworks -->
            <dependency>
                <groupId>com.github.rvesse</groupId>
                <artifactId>airline</artifactId>
                <version>${airline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit5.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk-jvm</artifactId>
                <version>${mockk.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk-dsl-jvm</artifactId>
                <version>${mockk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.10.1</version>
            </dependency>

            <!--!!!! DEPENDENCY UPPER BOUND CONVERGENCE !!!!-->
            <!-- We don't actually care about the versions of these transitive dependencies because they aren't used directly; However, we
             want to pin them so that all references to them converge to a single, upper bound within this project's dependency tree -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>3.0.2</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>31.1-jre</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.12.5</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>2.15.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>3.34.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.18.0</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Enforce Sane Build Environment -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-pom-standards</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <banDuplicatePomDependencyVersions/>
                                    <dependencyConvergence/>
                                    <reactorModuleConvergence/>
                                    <requireUpperBoundDeps/>
                                    <requireJavaVersion>
                                        <version>${minimum.jdk.version}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>${minimum.maven.version}</version>
                                    </requireMavenVersion>
                                    <requireReleaseDeps>
                                        <onlyWhenRelease>true</onlyWhenRelease>
                                        <message>Snapshot dependencies must be resolved before releasing</message>
                                    </requireReleaseDeps>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Configure Java+Kotlin Dual Support -->
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile-kotlin</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                                <jvmTarget>${java.release}</jvmTarget>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile-kotlin</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                                <jvmTarget>${java.release}</jvmTarget>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <compilerPlugins>
                            <plugin>kotlinx-serialization</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-serialization</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                            <arg>-XDcompilePolicy=simple</arg>
                        </compilerArgs>
                    </configuration>
                    <executions>
                        <!-- Replacing default-compile as it is treated specially by maven -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Replacing default-testCompile as it is treated specially by maven -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>kotlin-java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>kotlin-java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- To run Kotlin Tests-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <jacoco-agent.destfile>**/jacoco.exec</jacoco-agent.destfile>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

                <!-- Configure Code Coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-plugin.version}</version>
                    <configuration>
                        <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                        <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
                        <excludes>
                            <exclude>**/constant/**</exclude>

                            <exclude>**/client/*Client*</exclude>

                            <exclude>**/configuration/**ClientBuilder*</exclude>
                            <exclude>**/configuration/NetworkConfiguration*</exclude>
                            <exclude>**/config/**</exclude>

                            <exclude>**/model/**</exclude>

                            <exclude>**/plugin/Hook*</exclude>
                            <exclude>**/plugin/Plugin*</exclude>
                            <exclude>**/plugin/PluginConfiguration*</exclude>
                            <exclude>**/plugin/KtorPluginConfiguration*</exclude>

                            <exclude>**/authentication/AuthenticationConfiguration*</exclude>
                            <exclude>**/authentication/AuthenticationPlugin*</exclude>

                            <exclude>**/logging/**</exclude>
                            <exclude>**/serialization/**</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>instrument-coverage</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>coverage-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>coverage-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>CLASS</element>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${minimum.code.coverage}</minimum>
                                            </limit>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${minimum.code.coverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Configure Kotlin Linting -->
                <plugin>
                    <groupId>com.github.gantsign.maven</groupId>
                    <artifactId>ktlint-maven-plugin</artifactId>
                    <version>${ktlint-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <id>check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Configure KDocs -->
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>dokka</goal>
                                <goal>javadocJar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <sourceDirectories>
                            <dir>${project.basedir}/src/main/kotlin</dir>
                            <dir>${project.basedir}/src/main/java</dir>
                        </sourceDirectories>

                        <dokkaPlugins>
                            <plugin>
                                <groupId>org.jetbrains.dokka</groupId>
                                <artifactId>kotlin-as-java-plugin</artifactId>
                                <version>${dokka-plugin.version}</version>
                            </plugin>
                        </dokkaPlugins>
                    </configuration>
                </plugin>

                <!-- Add Licence Header -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${maven.licence.plugin.version}</version>
                    <configuration>
                        <properties>
                            <year>2022</year>
                            <owner>Expedia, Inc.</owner>
                        </properties>
                        <licenseSets>
                            <licenseSet>
                                <header>LICENSE-HEADER.txt</header>
                                <includes>
                                    <include>**/*.kt</include>
                                </includes>
                            </licenseSet>
                        </licenseSets>
                    </configuration>
                    <executions>
                        <execution>
                            <id>add-license-header</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Configure Javadocs to be JDK11+ Compatible -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <additionalOptions combine.children="append">
                            <additionalOption>-html5</additionalOption>
                        </additionalOptions>
                    </configuration>
                </plugin>

                <!-- Ensure that our dependencies are compatible -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-dependency-declarations</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <outputXML>true</outputXML>
                                <ignoreNonCompile>true</ignoreNonCompile>
                                <ignoredNonTestScopedDependencies>
                                    <ignoredNonTestScopedDependency>org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm
                                    </ignoredNonTestScopedDependency>
                                    <ignoredNonTestScopedDependency>io.ktor:ktor-io-jvm
                                    </ignoredNonTestScopedDependency>
                                </ignoredNonTestScopedDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Ensure Sources are attached -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>attach-sources-override</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>attach-test-sources</id>
                            <goals>
                                <goal>test-jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skipIfEmpty>true</skipIfEmpty>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Enforce a minimum set of quality across all modules -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven.antrun.plugin.version}</version>
                <executions>
                    <execution>
                        <!-- this can be run separately with mvn clean antrun:run@detekt -->
                        <id>detekt</id>
                        <phase>validate</phase>
                        <configuration>
                            <target name="detekt">
                                <java taskname="detekt" dir="${project.basedir}" fork="true" failonerror="true"
                                      classname="io.gitlab.arturbosch.detekt.cli.Main"
                                      classpathref="maven.plugin.classpath">
                                    <arg value="--input"/>
                                    <arg value="${project.basedir}${file.separator}src"/>
                                    <arg value="--config"/>
                                    <arg value="${project.basedir}${file.separator}detekt.yml"/>
                                    <arg value="--report"/>
                                    <arg value="html:${project.basedir}${file.separator}target${file.separator}site${file.separator}detekt.html"/>
                                    <arg value="--report"/>
                                    <arg value="xml:${project.basedir}${file.separator}target${file.separator}site${file.separator}detekt.xml"/>
                                    <arg value="--build-upon-default-config"/>
                                    <arg value="--all-rules"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <!-- this can be run separately with mvn clean antrun:run@ktlint-format -->
                    <execution>
                        <id>ktlint-format</id>
                        <phase>compile</phase>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${project.basedir}" fork="true" failonerror="true"
                                      classname="com.pinterest.ktlint.Main" classpathref="maven.plugin.classpath">
                                    <arg value="-F"/>
                                    <arg value="src/**/*.kt"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- this can be run separately with mvn clean antrun:run@ktlint -->
                        <id>ktlint</id>
                        <phase>validate</phase>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint" dir="${project.basedir}" fork="true" failonerror="true"
                                      classname="com.pinterest.ktlint.Main" classpathref="maven.plugin.classpath">
                                    <arg value="src/**/*.kt"/>
                                    <arg value="--reporter=plain"/>
                                    <arg value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-cli</artifactId>
                        <version>${detekt.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.pinterest</groupId>
                        <artifactId>ktlint</artifactId>
                        <version>${ktlint.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-serialization-jackson-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-core-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-okhttp-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-auth-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-content-negotiation-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-http-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-utils-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-logging-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-io-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-serialization-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-encoding-jvm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>atomicfu-jvm</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-mock-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk-dsl-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>


        <profile>
            <id>activate-kotlin</id>
            <activation>
                <file>
                    <exists>${basedir}/src/main/kotlin</exists>
                </file>
            </activation>

            <!-- Add Kotlin Standard Library -->
            <dependencies>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!-- Add additional source directories -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${build-helper-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>add-kotlin-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.basedir}/src/main/kotlin</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-kotlin-test-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.basedir}/src/test/kotlin</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Lint the sources -->
                    <plugin>
                        <groupId>com.github.gantsign.maven</groupId>
                        <artifactId>ktlint-maven-plugin</artifactId>
                    </plugin>

                    <!-- Document the sources -->
                    <plugin>
                        <groupId>org.jetbrains.dokka</groupId>
                        <artifactId>dokka-maven-plugin</artifactId>
                    </plugin>

                    <!-- Disable Javadocs -->
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Disable Specific Dependency Warnings for kotlin-stdlib -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dependency-declarations</id>
                                <configuration>
                                    <ignoredUsedUndeclaredDependencies combine.children="append">
                                        <ignoredUsedUndeclaredDependency>org.jetbrains:annotations
                                        </ignoredUsedUndeclaredDependency>
                                    </ignoredUsedUndeclaredDependencies>
                                    <ignoredUnusedDeclaredDependencies combine.children="append">
                                        <ignoredUnusedDeclaredDependency>org.jetbrains.kotlin:kotlin-stdlib
                                        </ignoredUnusedDeclaredDependency>
                                        <ignoreUnusedDeclaredDependency>org.apache.logging.log4j:log4j-api
                                        </ignoreUnusedDeclaredDependency>
                                    </ignoredUnusedDeclaredDependencies>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Run the kotlin compiler -->
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- release profile -->
        <profile>
            <id>release</id>
            <properties>
                <checkstyle.check.skip>true</checkstyle.check.skip>
                <checkstyle.includeTestSourceDirectory>false</checkstyle.includeTestSourceDirectory>
                <test.coverage.check.skip>true</test.coverage.check.skip>
                <javadoc.skip>true</javadoc.skip>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.gpg.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${maven.nexus-staging.plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>oss-sonatype</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>

                    <!-- skip some test cases during the release -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>**/PerformanceTest.java</exclude>
                                <argLine>@{argLine}</argLine>
                            </excludes>
                        </configuration>
                    </plugin>

                    <!-- replace the bean-utils-library javadoc jar file with the one containing all modules -->
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <classifier>javadoc</classifier>
                                    <classesDirectory>${project.parent.basedir}/target/site/apidocs</classesDirectory>
                                    <includes>**/*</includes>
                                    <finalName>${project.build.finalName}</finalName>
                                </configuration>
                                <id>pack-javadoc</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- GitHub verify action profile -->
        <profile>
            <id>github-verify-action-profile</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.mycila</groupId>
                            <artifactId>license-maven-plugin</artifactId>
                            <version>${maven.licence.plugin.version}</version>
                            <configuration>
                                <properties>
                                    <year>2022</year>
                                    <owner>Expedia, Inc.</owner>
                                </properties>
                                <licenseSets>
                                    <licenseSet>
                                        <header>LICENSE-HEADER.txt</header>
                                        <includes>
                                            <include>**/*.kt</include>
                                        </includes>
                                    </licenseSet>
                                </licenseSets>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>add-license-header</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>format</goal>
                                    </goals>
                                    <configuration>
                                        <skip>true</skip>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>check-for-license-header</id>
                                    <phase>compile</phase>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
